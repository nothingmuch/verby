
<Registry>
    <Container name="EERS">
    
        <Service name="base_dir">
            <![CDATA[
                return '/var/www/premier/' 
                    if -e '/var/www/premier/';
                return '/Users/stevan/Projects/premier/premier/'
                    if -e '/Users/stevan/Projects/premier/premier/';
                throw EERS::IllegalOperation "cannot find the base directory";            
            ]]>
        </Service>
        
        <Service name="current_survey_cycle" type="Literal">2005</Service>
        
        <Service name="report_tree_file" type="Literal">conf/report_tree.pl</Service>  
        <Service name="ReportTree">
             <![CDATA[
                my $c = shift;
                EERS::Report::Tree->new($c->get('base_dir') . $c->get('report_tree_file'));
            ]]>
        </Service>  
        
        <Service name="org_tree_file" type="Literal">database/data/organizations.tree</Service>  
        <Service name="TreeManager">
             <![CDATA[
                my $c = shift;
                EERS::Demographics::Tree::Manager->new(
                    'Organizations' => {
                        tree_root => EERS::Demographics::Tree->new( 
                                            { id => -1, description => EERS::Demographics::Tree->ROOT } 
                                            ),
                        tree_file_path => ($c->get('base_dir') . $c->get('org_tree_file')),
                        tree_parse_filter => sub {
                            my ($line_iterator) = @_;
                            my $line = $line_iterator->next();
                            chomp($line);                            
                            my ($id, $tabs, $desc) = ($line =~ /(\d{8})(\t+)?(.*)/);
                            my $depth = 0;
                            $depth = length $tabs if $tabs;
                            $id += 0;
                            my $tree = EERS::Demographics::Tree->new(
                                            EERS::Demographics::Tree::DemographicNode->new(
                                                    { id => $id, description => $desc }
                                                )
                                            );
                            $tree->setUID($id);
                            return ($depth, $tree);                             
                        }                    
                    }
                );            
            ]]>
        </Service>   
        
        <Service name="event_log_table" type="ConstructorInjection">
            <Class name="EERS::Tables::EventLogTable" constructor="new" />
            <Parameter type="component">/Database/sql_generator_class</Parameter>
            <Parameter type="component">/Database/connection</Parameter>            
        </Service>        

        <Service name="EventLogger" type="ConstructorInjection">
            <Class name="EERS::Log::EventLogger" constructor="new" />
            <Parameter type="component">event_log_table</Parameter>        
        </Service>    
        
        <Service name="pdf_report_table" type="ConstructorInjection">
            <Class name="EERS::Tables::PDFReportTable" constructor="new" />
            <Parameter type="component">/Database/sql_generator_class</Parameter>
            <Parameter type="component">/Database/connection</Parameter>            
        </Service>        

        <Service name="PDFLogger" type="ConstructorInjection">
            <Class name="EERS::Log::PDFLogger" constructor="new" />
            <Parameter type="component">pdf_report_table</Parameter>        
        </Service>          
        
        <Container name="Demographics">

            <Service name="lkup_org" type="ConstructorInjection">
                <Class name="EERS::Demographics::LookupEntity" constructor="new" />
                <Parameter>SELECT * FROM lkup_org</Parameter>
                <Parameter>org_id</Parameter>                
                <Parameter type="perl">[]</Parameter>                
                <Parameter type="component">/Database/connection</Parameter>
            </Service>

            <Service name="lkup_age" type="ConstructorInjection">
                <Class name="EERS::Demographics::LookupEntity" constructor="new" />
                <Parameter>SELECT * FROM lkup_age</Parameter>
                <Parameter>age_id</Parameter>                
                <Parameter type="perl">[]</Parameter>                
                <Parameter type="component">/Database/connection</Parameter>
            </Service>

            <Service name="lkup_ethnic_group" type="ConstructorInjection">
                <Class name="EERS::Demographics::LookupEntity" constructor="new" />
                <Parameter>SELECT * FROM lkup_ethnic_group</Parameter>
                <Parameter>ethnic_group_id</Parameter>                
                <Parameter type="perl">[]</Parameter>                
                <Parameter type="component">/Database/connection</Parameter>
            </Service>             
            
            <Service name="lkup_fte_status" type="ConstructorInjection">
                <Class name="EERS::Demographics::LookupEntity" constructor="new" />
                <Parameter>SELECT * FROM lkup_fte_status</Parameter>
                <Parameter>fte_status_id</Parameter>                
                <Parameter type="perl">[]</Parameter>                
                <Parameter type="component">/Database/connection</Parameter>
            </Service>    
            
            <Service name="lkup_gender" type="ConstructorInjection">
                <Class name="EERS::Demographics::LookupEntity" constructor="new" />
                <Parameter>SELECT * FROM lkup_gender</Parameter>
                <Parameter>gender_id</Parameter>                
                <Parameter type="perl">[]</Parameter>                
                <Parameter type="component">/Database/connection</Parameter>
            </Service>    
            
            <Service name="lkup_job_family" type="ConstructorInjection">
                <Class name="EERS::Demographics::LookupEntity" constructor="new" />
                <Parameter>SELECT * FROM lkup_job_family</Parameter>
                <Parameter>job_family_id</Parameter>                
                <Parameter type="perl">[]</Parameter>                
                <Parameter type="component">/Database/connection</Parameter>
            </Service>                                                    

            <Service name="lkup_manager_level" type="ConstructorInjection">
                <Class name="EERS::Demographics::LookupEntity" constructor="new" />
                <Parameter>SELECT * FROM lkup_manager_level</Parameter>
                <Parameter>manager_level_id</Parameter>                
                <Parameter type="perl">[]</Parameter>                
                <Parameter type="component">/Database/connection</Parameter>
            </Service>    
            
            <Service name="lkup_service_length" type="ConstructorInjection">
                <Class name="EERS::Demographics::LookupEntity" constructor="new" />
                <Parameter>SELECT * FROM lkup_service_length</Parameter>
                <Parameter>service_length_id</Parameter>                
                <Parameter type="perl">[]</Parameter>                
                <Parameter type="component">/Database/connection</Parameter>
            </Service>                                                                                         
            
        </Container>
        
        <Container name="LookupEntities">
        
            <Service name="ReportCycles">
                 <![CDATA[
                    my $c = shift;
                    my $report_cycle = EERS::ReportCycles->new($c->find('/Database/connection'));
                    $report_cycle->setDefaultCycleName($c->find('/current_survey_cycle'));
                    return $report_cycle;
                ]]>
            </Service>
            
            <Service name="UserAccessLevels" type="ConstructorInjection">
                <Class name="EERS::UserAccessLevels" constructor="new" />
                <Parameter type="component">/Database/connection</Parameter>            
            </Service>               
            
            <Service name="Questions" type="ConstructorInjection">
                <Class name="EERS::Report::Questions" constructor="new" />
                <Parameter type="component">/Database/connection</Parameter>            
            </Service>                   
            
        </Container>
        
        <Container name="Web">

            <Service name="CSVTemplateFactory" type="ConstructorInjection">
                <Class name="EERS::Util::CSVTemplateFactory" constructor="new" />
                <Parameter>INCLUDE_PATH</Parameter>
                <Parameter>/var/www/premier/csvdocs:/var/www/EERS/csvdocs</Parameter>           
            </Service>     
            
            <Service name="TemplateFactory" type="ConstructorInjection">
                <Class name="II::Web::Template::Factory" constructor="new" />
                <Parameter>INCLUDE_PATH</Parameter>
                <Parameter>/var/www/premier/htdocs:/var/www/EERS/htdocs</Parameter>            
            </Service>  
            
            <Service name="SessionManager" type="ConstructorInjection">
                <Class name="II::Web::Session::Manager" constructor="new" />
                <Parameter type="component">/Persistence/EntityManager</Parameter>
            </Service>                                                                              
        
        </Container>
        
        <Container name="Persistence">
        
            <Service name="tbl_user" type="ConstructorInjection">
                <Class name="EERS::Tables::UserTable" constructor="new" />
                <Parameter type="component">/Database/sql_generator_class</Parameter>
                <Parameter type="component">/Database/connection</Parameter>                
            </Service>         

            <Service name="lkup_orgs" type="ConstructorInjection">
                <Class name="EERS::Tables::OrganizationTable" constructor="new" />
                <Parameter type="component">/Database/sql_generator_class</Parameter>
                <Parameter type="component">/Database/connection</Parameter>                
            </Service>         

            <Service name="link_user_organization" type="ConstructorInjection">
                <Class name="EERS::Tables::LinkUserOrganizationTable" constructor="new" />
                <Parameter type="component">tbl_user</Parameter>
                <Parameter type="component">lkup_orgs</Parameter>                
                <Parameter type="component">/Database/connection</Parameter>                
            </Service>   
            
            <Service name="view_user_listing" type="ConstructorInjection">
                <Class name="EERS::Tables::UserListingView" constructor="new" />
                <Parameter type="component">/Database/connection</Parameter>                
            </Service>     
            
            <Service name="tbl_sessions" type="ConstructorInjection">
                <Class name="EERS::Tables::SessionTable" constructor="new" />
                <Parameter type="component">/Database/sql_generator_class</Parameter>
                <Parameter type="component">/Database/connection</Parameter>                
            </Service>         
            
            <Service name="User" type="ConstructorInjection">
                <Class name="EERS::Entities::User" constructor="new" />       
            </Service>  
            
            <Service name="Organization">
                 <![CDATA[
                    my $c = shift;
                    EERS::Entities::Organization->new($c->find('/TreeManager')->getTreeIndex('Organizations'));                    
                ]]>
            </Service> 
            
            <Service name="UserListing" type="ConstructorInjection">
                <Class name="EERS::Entities::UserListing" constructor="new" />       
            </Service>    
            
            <Service name="Session" type="ConstructorInjection">
                <Class name="EERS::Entities::Session" constructor="new" />       
            </Service>        
            
            <Service name="StandardReport" type="ConstructorInjection" prototype="true">
                <Class name="EERS::Entities::StandardReport" constructor="new" />       
            </Service
        </Container>
        
    </Container>
</Registry>