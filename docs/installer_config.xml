<installer>
    <config>
		<project_root>/tmp/var/www/foo</project_root>
		<company_name>Employee Engagement Reporting System</company_name>
		<perl_module_namespace>Acme::Moose</perl_module_namespace>
		<project_url>/premier</project_url>
		<database>
    		<dsn>dbi:mysql:test</dsn>
    		<username />
    		<password />
		</database>    		
		<svn_root>svn://69.3.245.230/var/svn/infinity-work</svn_root>
		<!-- implies File::Spec->catdir(cwd(), "EERS_demo/data_files") -->
		<data_dir>EERS_demo/data_files</data_dir> 
		<template_dir>EERS_demo/templates</template_dir>
    </config>
    
    <steps>
        <step id='data'>
            <!-- this implies: substeps => [] -->
    		<step id='demographics'>
    				<!-- 
    				    includes proper name, i don't know where to put it though
    				    do they get written to a config file? or to a table?
    				-->
    				<step type="load" proper_name='Age' file='lkup_age.csv' />
    				<step type="load" proper_name='Ethnicity', file='lkup_ethnic_group.csv' />
    				<step type="load" proper_name='FTE Status', file='lkup_fte_status.csv' />
    				<step type="load" proper_name='Gender', file='lkup_gender.csv' />
    				<step type="load" proper_name='Job Family', file='lkup_job_family.txt' />
    				<step type="load" proper_name='Manager Level', file='lkup_manager_level.csv' />
    				<step type="load" proper_name='Organization', file='organizations.tree' table_name='lkup_org' />
    		</step>
    		</step id='tables'>
    				<!-- data files without proper name are just loaded as is -->
    				<step type="load" file="tbl_hewitt_norms.csv" />
    				<step type="load" file="tbl_questions.txt" />
    				<step type="load" file_glob='tbl_survey_results_*.csv' />
    				<step type="load" file_glob='lkup_*_engagement_scores' />
            </step>
    	</step>

    	<step id="project_layout" type="dir" path="/tmp/var/www">
    		<step type="dir" name="$project_root">
    			<step type="dir" name="htdocs">
    				<step type="svn_co" name="static" repo="..." />
    				<step type="svn_co" name="images" repo="..." />
    				<step type="svn_co" name="javascript" repo="..." />
    				<step type="svn_co" name="css" repo="..." />
    				<step type="dir" name="pdfs" />
    				<step type="dir" name="documents" />
    			</step>

    			<step type="dir" name="t">
    			    <!--
    				# here client name is interpolated by the XML parser, i think
    				# the interpretation of the config shouldn't have to do with the syntax it's written in
    				#{ type => "template", template => "001_template_foo.t", output => "001_client_foo.t" },
    				#{ type => "template", template => "002_template_bar.t", output => "001_client_bar.t" },
    				#{ type => "template", template => "002_template_gorch.t", output => "001_client_gorch.t" },
    				-->
    			</step>

    			<step type="dir" name="database">
    				<step type="copy" name="data" source="$data_dir" />
                </step>

    			<step type="dir" name="csvdocs" />

    			<step type="dir" name="conf">
    			    <!-- 
    			        implicit 'out' param in pwd, httpd.conf 
    			        searched in template root, relative to $0 perhaps 
    			    -->
    				<step type="template" template="httpd.conf" />
    				<step type="template" template="startup.pl" depends="demographics" />
    				<step type="template" template="startup.xml" />
    			</step>

    			<step type="dir" name="perl">
    				<step type="perl_module" template="main.pm" package="$perl_module_namespace" />
    			</step>
    		</step>

    		<step type="svn_co" name="EERS" repo="EERS/trunk" />
    		<step type="svn_co" name="perl" repo="ii-framework/trunk/lib" />
    	</step>

    	<step type="test_run" depends="project_layout" />
    </steps>  
</installer>